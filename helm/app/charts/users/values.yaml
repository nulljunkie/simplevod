nameOverride: ""
fullnameOverride: ""

debug: false

grpcServer:
  image:
    repository: simplevod/users
    pullPolicy: IfNotPresent
    tag: latest
  imagePullSecrets: []
  replicas: 1
  command: ["python", "main.py"]
  args: []
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    fsGroup: 2000
  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
  service:
    type: ClusterIP
    port: 50051
  livenessProbe:
    httpGet:
      path: /healthz
      port: health
    initialDelaySeconds: 30
    periodSeconds: 15
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /readyz
      port: health
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  volumes: []
  volumeMounts: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

celeryWorker:
  image:
    repository: simplevod/users
    pullPolicy: IfNotPresent
    tag: latest
  imagePullSecrets: []
  replicas: 2
  command: ["celery", "-A", "tasks", "worker", "--loglevel=info", "--queues=email"]
  args: []
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    fsGroup: 2000
  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
  # livenessProbe:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - "celery -A tasks inspect ping --destination=celery@$HOSTNAME | grep -q 'ok'"
  #   initialDelaySeconds: 20
  #   periodSeconds: 30
  #   timeoutSeconds: 10
  #   failureThreshold: 3
  #   successThreshold: 1
  # readinessProbe:
  #   exec:
  #     command:
  #       - /bin/sh
  #       - -c
  #       - "celery -A tasks inspect ping --destination=celery@$HOSTNAME | grep -q 'ok'"
  #   initialDelaySeconds: 15
  #   periodSeconds: 15
  #   timeoutSeconds: 10
  #   failureThreshold: 3
  #   successThreshold: 1
  livenessProbe:
    httpGet:
      path: /healthz
      port: health
    initialDelaySeconds: 30
    periodSeconds: 15
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /readyz
      port: health
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  volumeMounts:
    - name: tmp
      mountPath: /tmp
  volumes:
    - name: tmp
      emptyDir: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

email: 
  address: ""
  password: ""
  server: smtp.gmail.com
  port: 465
