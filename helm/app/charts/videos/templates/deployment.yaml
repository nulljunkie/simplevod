apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "videos.fullname" . }}
  labels:
    {{- include "videos.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "videos.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "videos.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "videos.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command:
            {{- range .Values.command }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.args }}
          args:
            {{- range .Values.args }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}



          env:
            - name: PORT
              value: {{ .Values.service.port | quote }}
            - name: NODE_ENV
              value: production
            - name: MONGO_URI
              value: {{ printf "mongodb://root:rootpassword@%s:27017/upload?authSource=admin" (printf "%s-%s.%s" .Release.Name .Values.global.mongodb.nameOverride .Release.Namespace) | quote }}
            - name: JWT_SECRET
              value: {{ .Values.global.jwtAuth.secret | quote }}
            - name: JWT_EXPIRE
              value: {{ .Values.global.jwtAuth.expire | quote }}
            - name: STREAM_BASE_URL
              value: {{ printf "http://%s-%s.%s:9000/stream" .Release.Name .Values.global.minio.nameOverride .Release.Namespace | quote }}
            - name: THUMBNAIL_BASE_URL
              value: {{ printf "http://%s-%s.%s:9000/thumbnails" .Release.Name .Values.global.minio.nameOverride .Release.Namespace | quote }}
            - name: MINIO_ENDPOINT
              value: {{ printf "http://%s-%s.%s:9000" .Release.Name .Values.global.minio.nameOverride .Release.Namespace | quote }}
            - name: MINIO_ACCESS_KEY
              value: admin
            - name: MINIO_SECRET_KEY
              value: admin123
            - name: LOG_DEBUG
              value: {{ .Values.debug | default .Values.global.debug | quote }}




          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
