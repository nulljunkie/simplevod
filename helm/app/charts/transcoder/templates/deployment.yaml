apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "transcoder.fullname" . }}
  labels:
    {{- include "transcoder.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "transcoder.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "transcoder.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "transcoder.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-minio
          image: busybox:latest
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for MinIO to be ready..."
              # Extract host and port from MINIO_ENDPOINT
              MINIO_HOST_PORT=$(echo $MINIO_ENDPOINT | sed 's|.*://||')
              if echo $MINIO_HOST_PORT | grep -q ':'; then
                MINIO_HOST=$(echo $MINIO_HOST_PORT | cut -d':' -f1)
                MINIO_PORT=$(echo $MINIO_HOST_PORT | cut -d':' -f2)
              else
                MINIO_HOST=$MINIO_HOST_PORT
                MINIO_PORT=80
              fi
              echo "Minio host: ${MINIO_HOST}"
              echo "Minio port: ${MINIO_PORT}"
              until nc -z $MINIO_HOST $MINIO_PORT; do
                echo "MinIO not ready, waiting 5 seconds..."
                sleep 5
              done
              echo "MinIO is ready!"
          env:
            - name: MINIO_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: minio_endpoint
        - name: wait-for-rabbitmq
          image: busybox:latest
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for RabbitMQ to be ready..."
              echo "RabbitMQ host: ${RABBITMQ_HOST}"
              echo "RabbitMQ port: ${RABBITMQ_PORT}"
              until nc -z $RABBITMQ_HOST $RABBITMQ_PORT; do
                echo "RabbitMQ not ready, waiting 5 seconds..."
                sleep 5
              done
              echo "RabbitMQ is ready!"
          env:
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: rabbitmq_host
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: rabbitmq_port
        - name: wait-for-redis
          image: busybox:latest
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for Redis to be ready..."
              echo "Redis host: ${REDIS_HOST}"
              echo "Redis port: ${REDIS_PORT}"
              until nc -z $REDIS_HOST $REDIS_PORT; do
                echo "Redis not ready, waiting 5 seconds..."
                sleep 5
              done
              echo "Redis is ready!"
          env:
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: redis_host
            - name: REDIS_PORT
              value: "6379"
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: health
              containerPort: {{ .Values.health.port }}
              protocol: TCP
          env:
            - name: LOG_DEBUG
              value: {{ .Values.debug | default .Values.global.debug | quote }}

            - name: MINIO_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: minio_endpoint
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: minio_access_key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: minio_secret_key
            - name: MINIO_USE_SSL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: minio_use_ssl
            - name: MINIO_OUTPUT_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: minio_output_bucket



            # TODO: ADD ME
            - name: MC_ALIAS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: mc_alias

            - name: MINIO_SECRET_NAME
              value: {{ printf "%s-mc" ( include "transcoder.fullname" . )}}

            - name: RABBITMQ_ADMIN_SECRET_NAME
              value: {{ printf "%s-rabbitmqadmin" ( include "transcoder.fullname" . )}}
  


            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: rabbitmq_host
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: rabbitmq_port
            - name: RABBITMQ_VHOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: rabbitmq_vhost
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: rabbitmq_user
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: rabbitmq_password
            - name: RABBITMQ_CONSUME_QUEUE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: rabbitmq_consume_queue
            - name: RABBITMQ_PREFETCH
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: rabbitmq_prefetch
  


            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: redis_host
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: redis_port
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: redis_password
            - name: REDIS_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: redis_db
  

            - name: TRANSCODE_IMAGE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: transcode_image
            - name: TRANSCODE_PRESET
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: transcode_preset
            - name: RESOLUTIONS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: resolutions
            - name: CRF_MAP
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: crf_map
            - name: MASTER_PLAYLIST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: master_playlist
  

            - name: MAX_CONCURRENT_HANDLERS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: max_concurrent_handlers
            - name: RETRY_INTERVAL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: retry_interval

            # TODO:  INSPECT ME
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "transcoder.fullname" . }}
                  key: kubernetes_namespace
  

            - name: MC_CONFIG_INIT_IMAGE
              value: {{ .Values.transcode.initImage | quote }}
 
            - name: DEFAULT_MINIO_ALIAS
              value: {{ .Values.minio.mcAlias | quote }}
 
            - name: "DEFAULT_RABBITMQ_EXCHANGE"
              value: {{ .Values.transcode.rabbitmq.exchange | quote }}
 
            - name: "DEFAULT_RABBITMQ_ROUTING_KEY"
              value: {{ .Values.transcode.rabbitmq.routingKey | quote }}
 
            - name: "ALLOW_HTTP_JOB_ARG"
              value: {{ .Values.transcode.allowHttp | quote }}
 
            - name: HEALTH_PORT
              value: {{ .Values.health.port | quote }}



          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
